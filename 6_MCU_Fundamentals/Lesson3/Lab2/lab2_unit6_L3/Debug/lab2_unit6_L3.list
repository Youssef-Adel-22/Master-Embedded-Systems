
lab2_unit6_L3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b8  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002e8  080002e8  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002e8  080002e8  0002000c  2**0
                  CONTENTS
  4 .ARM          00000000  080002e8  080002e8  0002000c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002e8  080002e8  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002e8  080002e8  000102e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002ec  080002ec  000102ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  080002f0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  2000000c  080002fc  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  080002fc  00020028  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000046f  00000000  00000000  00020035  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000010d  00000000  00000000  000204a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  000205b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00020600  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001d73  00000000  00000000  00020630  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000006af  00000000  00000000  000223a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007d87  00000000  00000000  00022a52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002a7d9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  0002a82c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000000c 	.word	0x2000000c
 800014c:	00000000 	.word	0x00000000
 8000150:	080002d0 	.word	0x080002d0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000010 	.word	0x20000010
 800016c:	080002d0 	.word	0x080002d0

08000170 <main>:
#define GPIOA_ODR *(volatile uint32_t *)(GPIOA_BASE + 0x0C)
volatile RC_reg* RCC_CR = (volatile RC_reg*)0x40021000;
volatile CFGR_reg* RCC_CFGR = (volatile CFGR_reg*)(0x40021000+ 0x04);
volatile APB2ENR_reg* RCC_APB2ENR= (volatile APB2ENR_reg* )(0x40021000+ 0x18);
int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0

	RCC_CR->RC_bits.HSI_ON =1;
 8000176:	4b2a      	ldr	r3, [pc, #168]	; (8000220 <main+0xb0>)
 8000178:	681a      	ldr	r2, [r3, #0]
 800017a:	6813      	ldr	r3, [r2, #0]
 800017c:	f043 0301 	orr.w	r3, r3, #1
 8000180:	6013      	str	r3, [r2, #0]
	RCC_CFGR->CFGR_bits.SW =0;
 8000182:	4b28      	ldr	r3, [pc, #160]	; (8000224 <main+0xb4>)
 8000184:	681a      	ldr	r2, [r3, #0]
 8000186:	6813      	ldr	r3, [r2, #0]
 8000188:	f36f 0301 	bfc	r3, #0, #2
 800018c:	6013      	str	r3, [r2, #0]
	RCC_CFGR->CFGR_bits.HPRE=0;
 800018e:	4b25      	ldr	r3, [pc, #148]	; (8000224 <main+0xb4>)
 8000190:	681a      	ldr	r2, [r3, #0]
 8000192:	6813      	ldr	r3, [r2, #0]
 8000194:	f36f 1307 	bfc	r3, #4, #4
 8000198:	6013      	str	r3, [r2, #0]
	RCC_CFGR->CFGR_bits.PPRE1 =0b100;		//100: HCLK divided by 2
 800019a:	4b22      	ldr	r3, [pc, #136]	; (8000224 <main+0xb4>)
 800019c:	681a      	ldr	r2, [r3, #0]
 800019e:	6813      	ldr	r3, [r2, #0]
 80001a0:	2104      	movs	r1, #4
 80001a2:	f361 230a 	bfi	r3, r1, #8, #3
 80001a6:	6013      	str	r3, [r2, #0]
	RCC_CFGR->CFGR_bits.PPRE2 =0b101;		//101: HCLK divided by 4
 80001a8:	4b1e      	ldr	r3, [pc, #120]	; (8000224 <main+0xb4>)
 80001aa:	681a      	ldr	r2, [r3, #0]
 80001ac:	6813      	ldr	r3, [r2, #0]
 80001ae:	2105      	movs	r1, #5
 80001b0:	f361 23cd 	bfi	r3, r1, #11, #3
 80001b4:	6013      	str	r3, [r2, #0]
	RCC_APB2ENR->APB2ENR_bits.IOPA_EN=1;
 80001b6:	4b1c      	ldr	r3, [pc, #112]	; (8000228 <main+0xb8>)
 80001b8:	681a      	ldr	r2, [r3, #0]
 80001ba:	6813      	ldr	r3, [r2, #0]
 80001bc:	f043 0304 	orr.w	r3, r3, #4
 80001c0:	6013      	str	r3, [r2, #0]

	//Init GPIOA
	GPIOA_CRH &= 0xFF0FFFFF;
 80001c2:	4b1a      	ldr	r3, [pc, #104]	; (800022c <main+0xbc>)
 80001c4:	681b      	ldr	r3, [r3, #0]
 80001c6:	4a19      	ldr	r2, [pc, #100]	; (800022c <main+0xbc>)
 80001c8:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80001cc:	6013      	str	r3, [r2, #0]
	GPIOA_CRH |= 0x00200000;
 80001ce:	4b17      	ldr	r3, [pc, #92]	; (800022c <main+0xbc>)
 80001d0:	681b      	ldr	r3, [r3, #0]
 80001d2:	4a16      	ldr	r2, [pc, #88]	; (800022c <main+0xbc>)
 80001d4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80001d8:	6013      	str	r3, [r2, #0]
	while(1)
	{
		GPIOA_ODR |= 1<<13 ;
 80001da:	4b15      	ldr	r3, [pc, #84]	; (8000230 <main+0xc0>)
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	4a14      	ldr	r2, [pc, #80]	; (8000230 <main+0xc0>)
 80001e0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001e4:	6013      	str	r3, [r2, #0]
		for (int i = 0; i < 5000; i++); // arbitrary delay
 80001e6:	2300      	movs	r3, #0
 80001e8:	607b      	str	r3, [r7, #4]
 80001ea:	e002      	b.n	80001f2 <main+0x82>
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	3301      	adds	r3, #1
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	f241 3287 	movw	r2, #4999	; 0x1387
 80001f8:	4293      	cmp	r3, r2
 80001fa:	ddf7      	ble.n	80001ec <main+0x7c>
		GPIOA_ODR &= ~(1<<13) ;
 80001fc:	4b0c      	ldr	r3, [pc, #48]	; (8000230 <main+0xc0>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a0b      	ldr	r2, [pc, #44]	; (8000230 <main+0xc0>)
 8000202:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000206:	6013      	str	r3, [r2, #0]
		for (int i = 0; i < 5000; i++); // arbitrary delay
 8000208:	2300      	movs	r3, #0
 800020a:	603b      	str	r3, [r7, #0]
 800020c:	e002      	b.n	8000214 <main+0xa4>
 800020e:	683b      	ldr	r3, [r7, #0]
 8000210:	3301      	adds	r3, #1
 8000212:	603b      	str	r3, [r7, #0]
 8000214:	683b      	ldr	r3, [r7, #0]
 8000216:	f241 3287 	movw	r2, #4999	; 0x1387
 800021a:	4293      	cmp	r3, r2
 800021c:	ddf7      	ble.n	800020e <main+0x9e>
		GPIOA_ODR |= 1<<13 ;
 800021e:	e7dc      	b.n	80001da <main+0x6a>
 8000220:	20000000 	.word	0x20000000
 8000224:	20000004 	.word	0x20000004
 8000228:	20000008 	.word	0x20000008
 800022c:	40010804 	.word	0x40010804
 8000230:	4001080c 	.word	0x4001080c

08000234 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000234:	480d      	ldr	r0, [pc, #52]	; (800026c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000236:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000238:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800023c:	480c      	ldr	r0, [pc, #48]	; (8000270 <LoopForever+0x6>)
  ldr r1, =_edata
 800023e:	490d      	ldr	r1, [pc, #52]	; (8000274 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000240:	4a0d      	ldr	r2, [pc, #52]	; (8000278 <LoopForever+0xe>)
  movs r3, #0
 8000242:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000244:	e002      	b.n	800024c <LoopCopyDataInit>

08000246 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000246:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000248:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800024a:	3304      	adds	r3, #4

0800024c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800024c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800024e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000250:	d3f9      	bcc.n	8000246 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000252:	4a0a      	ldr	r2, [pc, #40]	; (800027c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000254:	4c0a      	ldr	r4, [pc, #40]	; (8000280 <LoopForever+0x16>)
  movs r3, #0
 8000256:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000258:	e001      	b.n	800025e <LoopFillZerobss>

0800025a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800025a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800025c:	3204      	adds	r2, #4

0800025e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800025e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000260:	d3fb      	bcc.n	800025a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000262:	f000 f811 	bl	8000288 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000266:	f7ff ff83 	bl	8000170 <main>

0800026a <LoopForever>:

LoopForever:
  b LoopForever
 800026a:	e7fe      	b.n	800026a <LoopForever>
  ldr   r0, =_estack
 800026c:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000270:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000274:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 8000278:	080002f0 	.word	0x080002f0
  ldr r2, =_sbss
 800027c:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 8000280:	20000028 	.word	0x20000028

08000284 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000284:	e7fe      	b.n	8000284 <ADC1_2_IRQHandler>
	...

08000288 <__libc_init_array>:
 8000288:	b570      	push	{r4, r5, r6, lr}
 800028a:	2600      	movs	r6, #0
 800028c:	4d0c      	ldr	r5, [pc, #48]	; (80002c0 <__libc_init_array+0x38>)
 800028e:	4c0d      	ldr	r4, [pc, #52]	; (80002c4 <__libc_init_array+0x3c>)
 8000290:	1b64      	subs	r4, r4, r5
 8000292:	10a4      	asrs	r4, r4, #2
 8000294:	42a6      	cmp	r6, r4
 8000296:	d109      	bne.n	80002ac <__libc_init_array+0x24>
 8000298:	f000 f81a 	bl	80002d0 <_init>
 800029c:	2600      	movs	r6, #0
 800029e:	4d0a      	ldr	r5, [pc, #40]	; (80002c8 <__libc_init_array+0x40>)
 80002a0:	4c0a      	ldr	r4, [pc, #40]	; (80002cc <__libc_init_array+0x44>)
 80002a2:	1b64      	subs	r4, r4, r5
 80002a4:	10a4      	asrs	r4, r4, #2
 80002a6:	42a6      	cmp	r6, r4
 80002a8:	d105      	bne.n	80002b6 <__libc_init_array+0x2e>
 80002aa:	bd70      	pop	{r4, r5, r6, pc}
 80002ac:	f855 3b04 	ldr.w	r3, [r5], #4
 80002b0:	4798      	blx	r3
 80002b2:	3601      	adds	r6, #1
 80002b4:	e7ee      	b.n	8000294 <__libc_init_array+0xc>
 80002b6:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ba:	4798      	blx	r3
 80002bc:	3601      	adds	r6, #1
 80002be:	e7f2      	b.n	80002a6 <__libc_init_array+0x1e>
 80002c0:	080002e8 	.word	0x080002e8
 80002c4:	080002e8 	.word	0x080002e8
 80002c8:	080002e8 	.word	0x080002e8
 80002cc:	080002ec 	.word	0x080002ec

080002d0 <_init>:
 80002d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002d2:	bf00      	nop
 80002d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002d6:	bc08      	pop	{r3}
 80002d8:	469e      	mov	lr, r3
 80002da:	4770      	bx	lr

080002dc <_fini>:
 80002dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002de:	bf00      	nop
 80002e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e2:	bc08      	pop	{r3}
 80002e4:	469e      	mov	lr, r3
 80002e6:	4770      	bx	lr
